# 使用 Debian 12 作为基础镜像
FROM debian:12-slim

# 设置非交互式安装，避免apt安装时提问
ARG DEBIAN_FRONTEND=noninteractive

# 安装基础依赖、Python、SUMO、编译工具和 Nix 安装所需的工具
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    build-essential \
    make \
    git \
    sudo \
    python3 \
    python3-pip \
    python3-venv \
    sumo \
    sumo-tools \
    procps \
    # 清理 apt 缓存
    && rm -rf /var/lib/apt/lists/*

# 安装 Nix (单用户模式)
RUN mkdir -p /etc/nix && \
    echo "build-users-group =" > /etc/nix/nix.conf

RUN curl -L https://nixos.org/nix/install | sh -s -- --no-daemon

# 设置 Nix 环境 (在后续 RUN/ENTRYPOINT 中通过 source 加载)
ENV PATH /root/.nix-profile/bin:$PATH
ENV NIX_PATH "nixpkgs=/root/.nix-defexpr/channels/nixpkgs"
ENV NIX_SSL_CERT_FILE /etc/ssl/certs/ca-certificates.crt

# 创建 Python 虚拟环境
RUN python3 -m venv /opt/venv

# 激活 venv 并安装 opp_env (确保 Nix 环境被加载)
RUN /bin/bash -c ". /root/.nix-profile/etc/profile.d/nix.sh && \
                  . /opt/venv/bin/activate && \
                  pip install --no-cache-dir opp_env"

# 创建 opp_env 的工作目录
RUN mkdir /opp_env_inst
WORKDIR /opp_env_inst

# 初始化 opp_env 并安装 Veins 5.3 (及其依赖 OMNeT++, INET)
RUN /bin/bash -c ". /root/.nix-profile/etc/profile.d/nix.sh && \
                  . /opt/venv/bin/activate && \
                  opp_env init && \
                  opp_env install veins-5.3"

# 创建用于挂载用户项目和结果的目录
RUN mkdir -p /simulation/project /simulation/results

# 设置默认工作目录为用户项目目录
WORKDIR /simulation/project

# 复制入口点脚本到镜像中
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# 定义容器启动时执行的入口点
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# 定义默认传递给入口点脚本的命令 (显示帮助)
CMD ["--help"]
