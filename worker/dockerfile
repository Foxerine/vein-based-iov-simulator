# 使用 Debian 12 作为基础镜像
FROM debian:12-slim

# 设置非交互式安装
ARG DEBIAN_FRONTEND=noninteractive

# 安装基础依赖、Python、SUMO、编译工具、最小GUI组件、Nginx和 Nix
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    build-essential \
    make \
    git \
    sudo \
    python3 \
    python3-pip \
    python3-venv \
    sumo \
    sumo-tools \
    procps \
    # 最小GUI支持组件
    xvfb \
    x11vnc \
    websockify \
    novnc \
    # Nginx (轻量级)
    nginx-light \
    # Qt依赖
    libqt5gui5 \
    libqt5widgets5 \
    libqt5core5a \
    libqt5opengl5 \
    # X11基础库
    libx11-6 \
    libxext6 \
    libxrender1 \
    libxtst6 \
    libxi6 \
    # 基础字体
    fonts-dejavu-core \
    # 清理缓存
    && rm -rf /var/lib/apt/lists/*

# 安装 Nix (单用户模式)
RUN mkdir -p /etc/nix && \
    echo "build-users-group =" > /etc/nix/nix.conf

RUN curl -L https://nixos.org/nix/install | sh -s -- --no-daemon

# 设置 Nix 环境
ENV PATH /root/.nix-profile/bin:$PATH
ENV NIX_PATH "nixpkgs=/root/.nix-defexpr/channels/nixpkgs"
ENV NIX_SSL_CERT_FILE /etc/ssl/certs/ca-certificates.crt

# 创建 Python 虚拟环境
RUN python3 -m venv /opt/venv

# 激活 venv 并安装 opp_env
RUN /bin/bash -c ". /root/.nix-profile/etc/profile.d/nix.sh && \
                  . /opt/venv/bin/activate && \
                  pip install --no-cache-dir opp_env"

# 创建 opp_env 的工作目录
RUN mkdir /opp_env_inst
WORKDIR /opp_env_inst

# 初始化 opp_env 并安装 Veins 5.3
RUN /bin/bash -c ". /root/.nix-profile/etc/profile.d/nix.sh && \
                  . /opt/venv/bin/activate && \
                  opp_env init && \
                  opp_env install veins-5.3"

# 环境变量
ENV VEINS_BIN="/opp_env_inst/veins-5.3/bin"
ENV OMNETPP_BIN="/opp_env_inst/omnetpp-6.1.0/bin"
ENV INET_SRC="/opp_env_inst/inet-4.5.4/src"

# GUI相关环境变量
ENV DISPLAY=:99
ENV SCREEN_WIDTH=1440
ENV SCREEN_HEIGHT=900
ENV SCREEN_DEPTH=24

# 创建挂载目录和配置目录
RUN mkdir -p /simulation/project /simulation/results /etc/nginx/sites-enabled

# 清理默认nginx配置
RUN rm -f /etc/nginx/sites-enabled/default

# 设置工作目录
WORKDIR /simulation/project

# 复制入口脚本
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# 暴露端口 (只暴露nginx端口)
EXPOSE 8080

# 入口点
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["--help"]
